{"ast":null,"code":"var _jsxFileName = \"/Users/umararshad/Desktop/Employee Directory/src/components/Employees.js\";\nimport React from 'react';\nimport Employee from './Employee';\nimport axios from 'axios';\n\nclass Employees extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      employees: [],\n      ascending: false,\n      filterdEmployees: []\n    };\n\n    this.handleFiltering = e => {\n      if (e.target.value === 'All') {\n        this.setState({\n          filterdEmployees: this.state.employees\n        });\n      } else {\n        this.setState({\n          filterdEmployees: this.state.employees.filter(employee => employee.location.country === e.target.value)\n        });\n      }\n    };\n\n    this.handleSorting = () => {\n      this.setState(state => ({\n        ascending: !state.ascending\n      }));\n      this.setState(state => ({\n        filterdEmployees: state.filterdEmployees.sort((a, b) => state.ascending ? a.dob.age - b.dob.age : b.dob.age - a.dob.age)\n      }));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://randomuser.me/api/?page=3&results=80').then(res => {\n      this.setState({\n        employees: res.data.results,\n        filterdEmployees: res.data.results\n      });\n    }).catch(err => console.log(err));\n  }\n\n  getCountriesList(employees) {\n    const set = new Set(employees.map(employee => employee.location.country));\n    return [...set];\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, \"Profile\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Age \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-sort\",\n      onClick: this.handleSorting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Country \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleFiltering,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"All\"), this.getCountriesList(this.state.employees).map((country, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, country)))))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, this.state.filterdEmployees.map(employee => /*#__PURE__*/React.createElement(Employee, {\n      employee: employee,\n      key: employee.login.uuid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Employees;","map":{"version":3,"sources":["/Users/umararshad/Desktop/Employee Directory/src/components/Employees.js"],"names":["React","Employee","axios","Employees","Component","state","employees","ascending","filterdEmployees","handleFiltering","e","target","value","setState","filter","employee","location","country","handleSorting","sort","a","b","dob","age","componentDidMount","get","then","res","data","results","catch","err","console","log","getCountriesList","set","Set","map","render","index","login","uuid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Employee from './Employee';\nimport axios from 'axios';\n\nclass Employees extends React.Component {\n  state = {\n    employees: [],\n    ascending: false,\n    filterdEmployees: [],\n  };\n  componentDidMount() {\n    axios\n      .get('https://randomuser.me/api/?page=3&results=80')\n      .then((res) => {\n        this.setState({\n          employees: res.data.results,\n          filterdEmployees: res.data.results,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  getCountriesList(employees) {\n    const set = new Set(employees.map((employee) => employee.location.country));\n    return [...set];\n  }\n\n  handleFiltering = (e) => {\n    if (e.target.value === 'All') {\n      this.setState({ filterdEmployees: this.state.employees });\n    } else {\n      this.setState({\n        filterdEmployees: this.state.employees.filter(\n          (employee) => employee.location.country === e.target.value\n        ),\n      });\n    }\n  };\n  handleSorting = () => {\n    this.setState((state) => ({ ascending: !state.ascending }));\n    this.setState((state) => ({\n      filterdEmployees: state.filterdEmployees.sort((a, b) =>\n        state.ascending ? a.dob.age - b.dob.age : b.dob.age - a.dob.age\n      ),\n    }));\n  };\n\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Profile</th>\n            <th>Name</th>\n            <th>\n              Age <i className=\"fas fa-sort\" onClick={this.handleSorting}></i>\n            </th>\n            <th>Email</th>\n            <th>\n              Country <i className=\"fas fa-filter\"></i>\n              <select onChange={this.handleFiltering}>\n                <option value=\"All\">All</option>\n                {this.getCountriesList(this.state.employees).map(\n                  (country, index) => (\n                    <option key={index} value={country}>\n                      {country}\n                    </option>\n                  )\n                )}\n              </select>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.filterdEmployees.map((employee) => (\n            <Employee employee={employee} key={employee.login.uuid} />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}